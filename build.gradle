plugins {
    id 'fabric-loom' version '1.4-SNAPSHOT' apply false
}

subprojects {
    apply plugin: 'java'
    
    java.toolchain.languageVersion = JavaLanguageVersion.of(17)
    def ENV = System.getenv()
    version = "${minecraft_version}-${base_version}-${ENV.GITHUB_RUN_NUMBER ?: 'dev'}"

    repositories {
        mavenCentral()

        maven {
            name = 'Sponge / Mixin'
            url = 'https://repo.spongepowered.org/repository/maven-public/'
        }

        maven {
            name = 'BlameJared Maven (CrT / Bookshelf)'
            url = 'https://maven.blamejared.com'
        }

        maven {
            name = "Modrinth"
            url = "https://api.modrinth.com/maven"
            content {
                includeGroup "maven.modrinth"
            }
        }

        maven {
            url "https://cursemaven.com"
            content {
                includeGroup "curse.maven"
            }
        }

        maven {
            url "https://maven.architectury.dev"
            content {
            }
        }

        maven {
            url "https://maven.saps.dev/minecraft"
            content {
                includeGroup "dev.latvian.mods"
                includeGroup "dev.ftb.mods"
            }
        }

        maven {
            url "https://jm.gserv.me/repository/maven-public/"
            content {
                includeGroup "info.journeymap"
            }
        }
    }

    dependencies {
        compileOnly "org.projectlombok:lombok:${project.lombok_version}"
        annotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
        testCompileOnly "org.projectlombok:lombok:${project.lombok_version}"
        testAnnotationProcessor "org.projectlombok:lombok:${project.lombok_version}"
    }

    tasks.withType(JavaCompile).configureEach {
    
        it.options.encoding = 'UTF-8'
        it.options.release = 17
    }

    // Disables Gradle's custom module metadata from being published to maven. The
    // metadata includes mapped dependencies which are not reasonably consumable by
    // other mod developers.
    tasks.withType(GenerateModuleMetadata) {

        enabled = false
    }
}